{"version":3,"sources":["components/AddCategory.js","helpers/getGigs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QACtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GACC,mBAAGJ,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZnBgB,EAAgB,WAAO,IAAD,EACGzC,mBAAS,CAAC,WADb,mBAC1BQ,EAD0B,KACdT,EADc,KAGjC,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEE,6BACGS,EAAWe,KAAI,SAACT,EAAU4B,GAAX,OAEd,aADA,CACC,EAAD,CAAS5B,SAAUA,GAAeA,YCX9C6B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.f00a1544.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setinputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setinputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setinputValue('');\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=IDnZbad0UIm3eagxXPXBW0o9uzvRWuLc`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ id, title, url }) => {\n  // console.log(id, title, url);\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGigs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GiftExpertApp = () => {\n  const [categories, setCategories] = useState(['naruto']);\n\n  return (\n    <>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr></hr>\n      {\n        <ol>\n          {categories.map((category, i) => (\n            // <li key={(category, i)}>{category}</li>\n            <GifGrid category={category} key={category} />\n          ))}\n        </ol>\n      }\n    </>\n  );\n};\n\nexport default GiftExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nReactDOM.render(<GiftExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}